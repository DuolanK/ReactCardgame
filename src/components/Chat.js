import React, { useState, useEffect } from "react";

function ChatRoom({ roomName, username }) {
    const [message, setMessage] = useState("");
    const [messages, setMessages] = useState([]);
    const [socket, setSocket] = useState(null);
    const apiUrl = process.env.REACT_APP_API_URL;

    useEffect(() => {
        const ws = new WebSocket(`${apiUrl.replace("http", "ws")}/room/ws/${roomName}/${username}`);
    
        ws.onopen = () => console.log("üîå WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω");
        
        ws.onmessage = (event) => {
            // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ª–æ–≥ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            console.log("Received message:", event.data); 
            setMessages((prevMessages) => [...prevMessages, event.data]); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        };
        
        ws.onclose = () => console.log("‚ùå WebSocket –æ—Ç–∫–ª—é—á–µ–Ω");
        ws.onerror = (error) => console.error("WebSocket –æ—à–∏–±–∫–∞:", error);

        setSocket(ws);
    
        return () => {
            if (ws) ws.close(); // –ó–∞–∫—Ä—ã—Ç–∏–µ WebSocket –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        };
    }, [roomName, username, apiUrl]);

    const handleSendMessage = () => {
        if (message.trim() && socket && socket.readyState === WebSocket.OPEN) {
            socket.send(message); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WebSocket
            setMessage(""); // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
        }
    };

    return (
        <div>
            <h2>–ß–∞—Ç –∫–æ–º–Ω–∞—Ç—ã: {roomName}</h2>
            <div>
                <h3>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!</h3>
            </div>

            <div style={{ height: "300px", overflowY: "scroll", border: "1px solid #ccc" }}>
                {messages.length === 0 ? (
                    <p>–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π.</p>
                ) : (
                    messages.map((msg, index) => (
                        <div key={index}>{msg}</div> // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
                    ))
                )}
            </div>

            <div>
                <input
                    type="text"
                    value={message}
                    onChange={(e) => setMessage(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                    style={{ width: "80%", padding: "10px" }}
                />
                <button onClick={handleSendMessage} style={{ padding: "10px", marginLeft: "10px" }}>
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                </button>
            </div>
        </div>
    );
}

export default ChatRoom;